server:
  port: 8888

spring:
  cloud:
    gateway:
      routes:
        - id: flight-search-service
          uri: http://localhost:8082
          predicates:
            - Path=/api/flights/search/**
        - id: flight-booking-service
          uri: http://localhost:8086
          predicates:
            - Path=/api/flights/search/**
        - id: user-service
          uri: http://localhost:8081
          predicates:
            - Path=/api/**
          filters:
            - AddResponseHeader=My-Header-Good,Good
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 100
                redis-rate-limiter.burstCapacity: 200
                redis-rate-limiter.requestedTokens: 1
    default-filters:
      - name: Retry
        args:
          retry: 5
          methods: GET
          backoff:
            firstBackOff: 10ms
            maxBackOff: 50ms
            factor: 2
            basedOnPreviousValue: false
  application:
    name: edge-service
  data.redis.host: localhost
  data.redis.port: 6379

management:
  endpoints:
    web:
      exposure:
        include: health, info, prometheus, metrics
  tracing:
    url: http://localhost:4318/v1/traces
    sampling:
      probability: 1.0


logging:
  pattern:
    level: '%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]'